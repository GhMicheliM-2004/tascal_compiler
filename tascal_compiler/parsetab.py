
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BEGIN BOOLEAN DIFERENTE DIV DO DP DPAR DPIGUAL ELSE END EPAR FALSE ID IF IGUAL INTEGER MAIORIGUAL MAIORQUE MAIS MENORIGUAL MENORQUE MENOS NOT NUMERO OR PF PROGRAM PV READ THEN TRUE VAR VEZES VIRG WHILE WRITEprograma : PROGRAM ID PV bloco PFbloco : declaracoes comando_compostodeclaracoes : VAR declaracao_variaveis\n| emptydeclaracao_variaveis : lista_id DP tipo PV declaracao_variaveis\n| lista_id DP tipo PVlista_id : ID\n| ID VIRG lista_idtipo : INTEGER\n| BOOLEANcomando_composto : BEGIN lista_comandos ENDlista_comandos : comando\n| comando PV lista_comandos\n| comando PVcomando : atribuicao\n| comando_condicional\n| comando_enquanto\n| comando_leitura\n| comando_escrita\n| comando_composto\n| emptyatribuicao : ID DPIGUAL expressaocomando_condicional : IF expressao THEN comando\n| IF expressao THEN comando ELSE comandocomando_enquanto : WHILE expressao DO comandocomando_leitura : READ EPAR lista_id DPARcomando_escrita : WRITE EPAR lista_expressoes DPARlista_expressoes : expressao\n| expressao VIRG lista_expressoesexpressao : expressao OR expressao_simples\n| expressao_simples relacao expressao_simples\n| expressao_simplesexpressao_simples : termo\n| expressao_simples MAIS termo\n| expressao_simples MENOS termotermo : fator\n| termo VEZES fator\n| termo DIV fator\n| termo AND fatorfator : ID\n| NUMERO\n| TRUE\n| FALSE\n| EPAR expressao DPAR\n| NOT fator\n| MENOS fatorrelacao : IGUAL\n| DIFERENTE\n| MENORQUE\n| MENORIGUAL\n| MAIORQUE\n| MAIORIGUALempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,9,],[0,-1,]),'ID':([2,7,11,25,26,30,32,33,37,43,44,46,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,88,90,],[3,14,24,39,39,14,24,39,39,39,39,14,39,24,39,39,39,39,-47,-48,-49,-50,-51,-52,39,39,39,24,14,39,24,]),'PV':([3,11,16,17,18,19,20,21,22,23,31,32,35,36,38,39,40,41,42,48,49,50,53,54,68,70,71,76,77,78,79,80,81,82,83,84,85,86,87,90,92,],[4,-53,32,-15,-16,-17,-18,-19,-20,-21,-11,-53,-32,-33,-36,-40,-41,-42,-43,75,-9,-10,-22,-53,-46,-45,-53,-23,-30,-31,-34,-35,-37,-38,-39,-44,-25,-26,-27,-53,-24,]),'VAR':([4,],[7,]),'BEGIN':([4,6,8,11,12,32,54,71,75,89,90,],[-53,11,-4,11,-3,11,11,11,-6,-5,11,]),'PF':([5,10,31,],[9,-2,-11,]),'IF':([11,32,54,71,90,],[25,25,25,25,25,]),'WHILE':([11,32,54,71,90,],[26,26,26,26,26,]),'READ':([11,32,54,71,90,],[27,27,27,27,27,]),'WRITE':([11,32,54,71,90,],[28,28,28,28,28,]),'END':([11,15,16,17,18,19,20,21,22,23,31,32,35,36,38,39,40,41,42,52,53,54,68,70,71,76,77,78,79,80,81,82,83,84,85,86,87,90,92,],[-53,31,-12,-15,-16,-17,-18,-19,-20,-21,-11,-14,-32,-33,-36,-40,-41,-42,-43,-13,-22,-53,-46,-45,-53,-23,-30,-31,-34,-35,-37,-38,-39,-44,-25,-26,-27,-53,-24,]),'DP':([13,14,51,],[29,-7,-8,]),'DPAR':([14,35,36,38,39,40,41,42,51,68,69,70,72,73,74,77,78,79,80,81,82,83,84,91,],[-7,-32,-33,-36,-40,-41,-42,-43,-8,-46,84,-45,86,87,-28,-30,-31,-34,-35,-37,-38,-39,-44,-29,]),'VIRG':([14,35,36,38,39,40,41,42,68,70,74,77,78,79,80,81,82,83,84,],[30,-32,-33,-36,-40,-41,-42,-43,-46,-45,88,-30,-31,-34,-35,-37,-38,-39,-44,]),'ELSE':([17,18,19,20,21,22,23,31,35,36,38,39,40,41,42,53,54,68,70,71,76,77,78,79,80,81,82,83,84,85,86,87,90,92,],[-15,-16,-17,-18,-19,-20,-21,-11,-32,-33,-36,-40,-41,-42,-43,-22,-53,-46,-45,-53,90,-30,-31,-34,-35,-37,-38,-39,-44,-25,-26,-27,-53,-24,]),'DPIGUAL':([24,],[33,]),'NUMERO':([25,26,33,37,43,44,47,55,56,57,58,59,60,61,62,63,64,65,66,67,88,],[40,40,40,40,40,40,40,40,40,40,40,-47,-48,-49,-50,-51,-52,40,40,40,40,]),'TRUE':([25,26,33,37,43,44,47,55,56,57,58,59,60,61,62,63,64,65,66,67,88,],[41,41,41,41,41,41,41,41,41,41,41,-47,-48,-49,-50,-51,-52,41,41,41,41,]),'FALSE':([25,26,33,37,43,44,47,55,56,57,58,59,60,61,62,63,64,65,66,67,88,],[42,42,42,42,42,42,42,42,42,42,42,-47,-48,-49,-50,-51,-52,42,42,42,42,]),'EPAR':([25,26,27,28,33,37,43,44,47,55,56,57,58,59,60,61,62,63,64,65,66,67,88,],[43,43,46,47,43,43,43,43,43,43,43,43,43,-47,-48,-49,-50,-51,-52,43,43,43,43,]),'NOT':([25,26,33,37,43,44,47,55,56,57,58,59,60,61,62,63,64,65,66,67,88,],[44,44,44,44,44,44,44,44,44,44,44,-47,-48,-49,-50,-51,-52,44,44,44,44,]),'MENOS':([25,26,33,35,36,37,38,39,40,41,42,43,44,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,77,78,79,80,81,82,83,84,88,],[37,37,37,58,-33,37,-36,-40,-41,-42,-43,37,37,37,37,37,37,37,-47,-48,-49,-50,-51,-52,37,37,37,-46,-45,58,58,-34,-35,-37,-38,-39,-44,37,]),'INTEGER':([29,],[49,]),'BOOLEAN':([29,],[50,]),'THEN':([34,35,36,38,39,40,41,42,68,70,77,78,79,80,81,82,83,84,],[54,-32,-33,-36,-40,-41,-42,-43,-46,-45,-30,-31,-34,-35,-37,-38,-39,-44,]),'OR':([34,35,36,38,39,40,41,42,45,53,68,69,70,74,77,78,79,80,81,82,83,84,],[55,-32,-33,-36,-40,-41,-42,-43,55,55,-46,55,-45,55,-30,-31,-34,-35,-37,-38,-39,-44,]),'DO':([35,36,38,39,40,41,42,45,68,70,77,78,79,80,81,82,83,84,],[-32,-33,-36,-40,-41,-42,-43,71,-46,-45,-30,-31,-34,-35,-37,-38,-39,-44,]),'MAIS':([35,36,38,39,40,41,42,68,70,77,78,79,80,81,82,83,84,],[57,-33,-36,-40,-41,-42,-43,-46,-45,57,57,-34,-35,-37,-38,-39,-44,]),'IGUAL':([35,36,38,39,40,41,42,68,70,79,80,81,82,83,84,],[59,-33,-36,-40,-41,-42,-43,-46,-45,-34,-35,-37,-38,-39,-44,]),'DIFERENTE':([35,36,38,39,40,41,42,68,70,79,80,81,82,83,84,],[60,-33,-36,-40,-41,-42,-43,-46,-45,-34,-35,-37,-38,-39,-44,]),'MENORQUE':([35,36,38,39,40,41,42,68,70,79,80,81,82,83,84,],[61,-33,-36,-40,-41,-42,-43,-46,-45,-34,-35,-37,-38,-39,-44,]),'MENORIGUAL':([35,36,38,39,40,41,42,68,70,79,80,81,82,83,84,],[62,-33,-36,-40,-41,-42,-43,-46,-45,-34,-35,-37,-38,-39,-44,]),'MAIORQUE':([35,36,38,39,40,41,42,68,70,79,80,81,82,83,84,],[63,-33,-36,-40,-41,-42,-43,-46,-45,-34,-35,-37,-38,-39,-44,]),'MAIORIGUAL':([35,36,38,39,40,41,42,68,70,79,80,81,82,83,84,],[64,-33,-36,-40,-41,-42,-43,-46,-45,-34,-35,-37,-38,-39,-44,]),'VEZES':([36,38,39,40,41,42,68,70,79,80,81,82,83,84,],[65,-36,-40,-41,-42,-43,-46,-45,65,65,-37,-38,-39,-44,]),'DIV':([36,38,39,40,41,42,68,70,79,80,81,82,83,84,],[66,-36,-40,-41,-42,-43,-46,-45,66,66,-37,-38,-39,-44,]),'AND':([36,38,39,40,41,42,68,70,79,80,81,82,83,84,],[67,-36,-40,-41,-42,-43,-46,-45,67,67,-37,-38,-39,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloco':([4,],[5,]),'declaracoes':([4,],[6,]),'empty':([4,11,32,54,71,90,],[8,23,23,23,23,23,]),'comando_composto':([6,11,32,54,71,90,],[10,22,22,22,22,22,]),'declaracao_variaveis':([7,75,],[12,89,]),'lista_id':([7,30,46,75,],[13,51,72,13,]),'lista_comandos':([11,32,],[15,52,]),'comando':([11,32,54,71,90,],[16,16,76,85,92,]),'atribuicao':([11,32,54,71,90,],[17,17,17,17,17,]),'comando_condicional':([11,32,54,71,90,],[18,18,18,18,18,]),'comando_enquanto':([11,32,54,71,90,],[19,19,19,19,19,]),'comando_leitura':([11,32,54,71,90,],[20,20,20,20,20,]),'comando_escrita':([11,32,54,71,90,],[21,21,21,21,21,]),'expressao':([25,26,33,43,47,88,],[34,45,53,69,74,74,]),'expressao_simples':([25,26,33,43,47,55,56,88,],[35,35,35,35,35,77,78,35,]),'termo':([25,26,33,43,47,55,56,57,58,88,],[36,36,36,36,36,36,36,79,80,36,]),'fator':([25,26,33,37,43,44,47,55,56,57,58,65,66,67,88,],[38,38,38,68,38,70,38,38,38,38,38,81,82,83,38,]),'tipo':([29,],[48,]),'relacao':([35,],[56,]),'lista_expressoes':([47,88,],[73,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID PV bloco PF','programa',5,'p_programa','parser.py',43),
  ('bloco -> declaracoes comando_composto','bloco',2,'p_bloco','parser.py',57),
  ('declaracoes -> VAR declaracao_variaveis','declaracoes',2,'p_declaracoes','parser.py',62),
  ('declaracoes -> empty','declaracoes',1,'p_declaracoes','parser.py',63),
  ('declaracao_variaveis -> lista_id DP tipo PV declaracao_variaveis','declaracao_variaveis',5,'p_declaracao_variaveis','parser.py',68),
  ('declaracao_variaveis -> lista_id DP tipo PV','declaracao_variaveis',4,'p_declaracao_variaveis','parser.py',69),
  ('lista_id -> ID','lista_id',1,'p_lista_id','parser.py',76),
  ('lista_id -> ID VIRG lista_id','lista_id',3,'p_lista_id','parser.py',77),
  ('tipo -> INTEGER','tipo',1,'p_tipo','parser.py',85),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser.py',86),
  ('comando_composto -> BEGIN lista_comandos END','comando_composto',3,'p_comando_composto','parser.py',91),
  ('lista_comandos -> comando','lista_comandos',1,'p_lista_comandos','parser.py',96),
  ('lista_comandos -> comando PV lista_comandos','lista_comandos',3,'p_lista_comandos','parser.py',97),
  ('lista_comandos -> comando PV','lista_comandos',2,'p_lista_comandos','parser.py',98),
  ('comando -> atribuicao','comando',1,'p_comando','parser.py',103),
  ('comando -> comando_condicional','comando',1,'p_comando','parser.py',104),
  ('comando -> comando_enquanto','comando',1,'p_comando','parser.py',105),
  ('comando -> comando_leitura','comando',1,'p_comando','parser.py',106),
  ('comando -> comando_escrita','comando',1,'p_comando','parser.py',107),
  ('comando -> comando_composto','comando',1,'p_comando','parser.py',108),
  ('comando -> empty','comando',1,'p_comando','parser.py',109),
  ('atribuicao -> ID DPIGUAL expressao','atribuicao',3,'p_atribuicao','parser.py',114),
  ('comando_condicional -> IF expressao THEN comando','comando_condicional',4,'p_comando_condicional','parser.py',124),
  ('comando_condicional -> IF expressao THEN comando ELSE comando','comando_condicional',6,'p_comando_condicional','parser.py',125),
  ('comando_enquanto -> WHILE expressao DO comando','comando_enquanto',4,'p_comando_enquanto','parser.py',132),
  ('comando_leitura -> READ EPAR lista_id DPAR','comando_leitura',4,'p_comando_leitura','parser.py',139),
  ('comando_escrita -> WRITE EPAR lista_expressoes DPAR','comando_escrita',4,'p_comando_escrita','parser.py',147),
  ('lista_expressoes -> expressao','lista_expressoes',1,'p_lista_expressoes','parser.py',155),
  ('lista_expressoes -> expressao VIRG lista_expressoes','lista_expressoes',3,'p_lista_expressoes','parser.py',156),
  ('expressao -> expressao OR expressao_simples','expressao',3,'p_expressao','parser.py',168),
  ('expressao -> expressao_simples relacao expressao_simples','expressao',3,'p_expressao','parser.py',169),
  ('expressao -> expressao_simples','expressao',1,'p_expressao','parser.py',170),
  ('expressao_simples -> termo','expressao_simples',1,'p_expressao_simples','parser.py',196),
  ('expressao_simples -> expressao_simples MAIS termo','expressao_simples',3,'p_expressao_simples','parser.py',197),
  ('expressao_simples -> expressao_simples MENOS termo','expressao_simples',3,'p_expressao_simples','parser.py',198),
  ('termo -> fator','termo',1,'p_termo','parser.py',212),
  ('termo -> termo VEZES fator','termo',3,'p_termo','parser.py',213),
  ('termo -> termo DIV fator','termo',3,'p_termo','parser.py',214),
  ('termo -> termo AND fator','termo',3,'p_termo','parser.py',215),
  ('fator -> ID','fator',1,'p_fator','parser.py',236),
  ('fator -> NUMERO','fator',1,'p_fator','parser.py',237),
  ('fator -> TRUE','fator',1,'p_fator','parser.py',238),
  ('fator -> FALSE','fator',1,'p_fator','parser.py',239),
  ('fator -> EPAR expressao DPAR','fator',3,'p_fator','parser.py',240),
  ('fator -> NOT fator','fator',2,'p_fator','parser.py',241),
  ('fator -> MENOS fator','fator',2,'p_fator','parser.py',242),
  ('relacao -> IGUAL','relacao',1,'p_relacao','parser.py',268),
  ('relacao -> DIFERENTE','relacao',1,'p_relacao','parser.py',269),
  ('relacao -> MENORQUE','relacao',1,'p_relacao','parser.py',270),
  ('relacao -> MENORIGUAL','relacao',1,'p_relacao','parser.py',271),
  ('relacao -> MAIORQUE','relacao',1,'p_relacao','parser.py',272),
  ('relacao -> MAIORIGUAL','relacao',1,'p_relacao','parser.py',273),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',278),
]
