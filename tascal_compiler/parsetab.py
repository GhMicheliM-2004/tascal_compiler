
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BEGIN BOOLEAN DIFERENTE DIV DO DP DPAR DPIGUAL ELSE END EPAR FALSE ID IF IGUAL INTEGER MAIORIGUAL MAIORQUE MAIS MENORIGUAL MENORQUE MENOS NOT NUMERO OR PF PROGRAM PV READ THEN TRUE VAR VEZES VIRG WHILE WRITEprograma : PROGRAM ID PV bloco PF\nbloco : secao_decl_var comando_composto\n      | comando_composto\n\nsecao_decl_var : VAR declaracao_var PV lista_decl_var\n               | VAR declaracao_var PV\n\nlista_decl_var : declaracao_var PV lista_decl_var\n               | declaracao_var PV\ndeclaracao_var : lista_id DP tipo\nlista_id : ID\n         | ID VIRG lista_id\n\ntipo : INTEGER\n     | BOOLEAN\ncomando_composto : BEGIN lista_comandos END\nlista_comandos : comando\n               | comando PV lista_comandos\n               | comando PV\n\ncomando : atribuicao\n        | condicional\n        | repeticao\n        | leitura\n        | escrita\n        | comando_composto\natribuicao : ID DPIGUAL expressao\ncondicional : IF expressao THEN comando\n            | IF expressao THEN comando ELSE comando\nrepeticao : WHILE expressao DO comandoleitura : READ EPAR lista_id DPARescrita : WRITE EPAR lista_exp DPAR\nlista_exp : expressao\n          | expressao VIRG lista_exp\n\nexpressao : expressao_simples\n          | expressao_simples relacao expressao_simples\n\nrelacao : IGUAL\n        | DIFERENTE\n        | MENORQUE\n        | MENORIGUAL\n        | MAIORQUE\n        | MAIORIGUAL\n\nexpressao_simples : termo\n                  | termo expressao_simples_op\n\nexpressao_simples_op : MAIS termo\n                     | MENOS termo\n                     | OR termo\n                     | MAIS termo expressao_simples_op\n                     | MENOS termo expressao_simples_op\n                     | OR termo expressao_simples_op\n\ntermo : fator\n      | fator termo_op\n\ntermo_op : VEZES fator\n         | DIV fator\n         | AND fator\n         | VEZES fator termo_op\n         | DIV fator termo_op\n         | AND fator termo_op\n\nfator : ID\n      | NUMERO\n      | logico\n      | EPAR expressao DPAR\n      | NOT fator\n      | MENOS fator\n\nlogico : TRUE\n       | FALSE\n'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,10,],[0,-1,]),'ID':([2,8,9,24,25,28,30,32,33,41,42,43,47,48,57,58,59,60,61,62,63,64,66,67,68,70,71,72,76,80,93,95,],[3,14,23,38,38,14,14,23,38,38,38,38,14,38,23,38,-33,-34,-35,-36,-37,-38,38,38,38,38,38,38,23,14,38,23,]),'PV':([3,12,16,17,18,19,20,21,22,31,35,36,37,38,39,40,44,45,49,51,52,53,56,65,69,74,75,81,82,83,84,85,86,87,88,89,90,91,92,96,97,98,99,100,101,103,],[4,28,32,-17,-18,-19,-20,-21,-22,-13,-31,-39,-47,-55,-56,-57,-61,-62,80,-8,-11,-12,-23,-40,-48,-59,-60,-24,-32,-41,-42,-43,-49,-50,-51,-58,-26,-27,-28,-44,-45,-46,-52,-53,-54,-25,]),'VAR':([4,],[8,]),'BEGIN':([4,6,9,28,32,50,57,76,80,94,95,],[9,9,9,-5,9,-4,9,9,-7,-6,9,]),'PF':([5,7,11,31,],[10,-3,-2,-13,]),'IF':([9,32,57,76,95,],[24,24,24,24,24,]),'WHILE':([9,32,57,76,95,],[25,25,25,25,25,]),'READ':([9,32,57,76,95,],[26,26,26,26,26,]),'WRITE':([9,32,57,76,95,],[27,27,27,27,27,]),'DP':([13,14,54,],[29,-9,-10,]),'DPAR':([14,35,36,37,38,39,40,44,45,54,65,69,73,74,75,77,78,79,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,],[-9,-31,-39,-47,-55,-56,-57,-61,-62,-10,-40,-48,89,-59,-60,91,92,-29,-32,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,-30,]),'VIRG':([14,35,36,37,38,39,40,44,45,65,69,74,75,79,82,83,84,85,86,87,88,89,96,97,98,99,100,101,],[30,-31,-39,-47,-55,-56,-57,-61,-62,-40,-48,-59,-60,93,-32,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,]),'END':([15,16,17,18,19,20,21,22,31,32,35,36,37,38,39,40,44,45,55,56,65,69,74,75,81,82,83,84,85,86,87,88,89,90,91,92,96,97,98,99,100,101,103,],[31,-14,-17,-18,-19,-20,-21,-22,-13,-16,-31,-39,-47,-55,-56,-57,-61,-62,-15,-23,-40,-48,-59,-60,-24,-32,-41,-42,-43,-49,-50,-51,-58,-26,-27,-28,-44,-45,-46,-52,-53,-54,-25,]),'ELSE':([17,18,19,20,21,22,31,35,36,37,38,39,40,44,45,56,65,69,74,75,81,82,83,84,85,86,87,88,89,90,91,92,96,97,98,99,100,101,103,],[-17,-18,-19,-20,-21,-22,-13,-31,-39,-47,-55,-56,-57,-61,-62,-23,-40,-48,-59,-60,95,-32,-41,-42,-43,-49,-50,-51,-58,-26,-27,-28,-44,-45,-46,-52,-53,-54,-25,]),'DPIGUAL':([23,],[33,]),'NUMERO':([24,25,33,41,42,43,48,58,59,60,61,62,63,64,66,67,68,70,71,72,93,],[39,39,39,39,39,39,39,39,-33,-34,-35,-36,-37,-38,39,39,39,39,39,39,39,]),'EPAR':([24,25,26,27,33,41,42,43,48,58,59,60,61,62,63,64,66,67,68,70,71,72,93,],[41,41,47,48,41,41,41,41,41,41,-33,-34,-35,-36,-37,-38,41,41,41,41,41,41,41,]),'NOT':([24,25,33,41,42,43,48,58,59,60,61,62,63,64,66,67,68,70,71,72,93,],[42,42,42,42,42,42,42,42,-33,-34,-35,-36,-37,-38,42,42,42,42,42,42,42,]),'MENOS':([24,25,33,36,37,38,39,40,41,42,43,44,45,48,58,59,60,61,62,63,64,66,67,68,69,70,71,72,74,75,83,84,85,86,87,88,89,93,99,100,101,],[43,43,43,67,-47,-55,-56,-57,43,43,43,-61,-62,43,43,-33,-34,-35,-36,-37,-38,43,43,43,-48,43,43,43,-59,-60,67,67,67,-49,-50,-51,-58,43,-52,-53,-54,]),'TRUE':([24,25,33,41,42,43,48,58,59,60,61,62,63,64,66,67,68,70,71,72,93,],[44,44,44,44,44,44,44,44,-33,-34,-35,-36,-37,-38,44,44,44,44,44,44,44,]),'FALSE':([24,25,33,41,42,43,48,58,59,60,61,62,63,64,66,67,68,70,71,72,93,],[45,45,45,45,45,45,45,45,-33,-34,-35,-36,-37,-38,45,45,45,45,45,45,45,]),'INTEGER':([29,],[52,]),'BOOLEAN':([29,],[53,]),'THEN':([34,35,36,37,38,39,40,44,45,65,69,74,75,82,83,84,85,86,87,88,89,96,97,98,99,100,101,],[57,-31,-39,-47,-55,-56,-57,-61,-62,-40,-48,-59,-60,-32,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,]),'DO':([35,36,37,38,39,40,44,45,46,65,69,74,75,82,83,84,85,86,87,88,89,96,97,98,99,100,101,],[-31,-39,-47,-55,-56,-57,-61,-62,76,-40,-48,-59,-60,-32,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,]),'IGUAL':([35,36,37,38,39,40,44,45,65,69,74,75,83,84,85,86,87,88,89,96,97,98,99,100,101,],[59,-39,-47,-55,-56,-57,-61,-62,-40,-48,-59,-60,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,]),'DIFERENTE':([35,36,37,38,39,40,44,45,65,69,74,75,83,84,85,86,87,88,89,96,97,98,99,100,101,],[60,-39,-47,-55,-56,-57,-61,-62,-40,-48,-59,-60,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,]),'MENORQUE':([35,36,37,38,39,40,44,45,65,69,74,75,83,84,85,86,87,88,89,96,97,98,99,100,101,],[61,-39,-47,-55,-56,-57,-61,-62,-40,-48,-59,-60,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,]),'MENORIGUAL':([35,36,37,38,39,40,44,45,65,69,74,75,83,84,85,86,87,88,89,96,97,98,99,100,101,],[62,-39,-47,-55,-56,-57,-61,-62,-40,-48,-59,-60,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,]),'MAIORQUE':([35,36,37,38,39,40,44,45,65,69,74,75,83,84,85,86,87,88,89,96,97,98,99,100,101,],[63,-39,-47,-55,-56,-57,-61,-62,-40,-48,-59,-60,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,]),'MAIORIGUAL':([35,36,37,38,39,40,44,45,65,69,74,75,83,84,85,86,87,88,89,96,97,98,99,100,101,],[64,-39,-47,-55,-56,-57,-61,-62,-40,-48,-59,-60,-41,-42,-43,-49,-50,-51,-58,-44,-45,-46,-52,-53,-54,]),'MAIS':([36,37,38,39,40,44,45,69,74,75,83,84,85,86,87,88,89,99,100,101,],[66,-47,-55,-56,-57,-61,-62,-48,-59,-60,66,66,66,-49,-50,-51,-58,-52,-53,-54,]),'OR':([36,37,38,39,40,44,45,69,74,75,83,84,85,86,87,88,89,99,100,101,],[68,-47,-55,-56,-57,-61,-62,-48,-59,-60,68,68,68,-49,-50,-51,-58,-52,-53,-54,]),'VEZES':([37,38,39,40,44,45,74,75,86,87,88,89,],[70,-55,-56,-57,-61,-62,-59,-60,70,70,70,-58,]),'DIV':([37,38,39,40,44,45,74,75,86,87,88,89,],[71,-55,-56,-57,-61,-62,-59,-60,71,71,71,-58,]),'AND':([37,38,39,40,44,45,74,75,86,87,88,89,],[72,-55,-56,-57,-61,-62,-59,-60,72,72,72,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloco':([4,],[5,]),'secao_decl_var':([4,],[6,]),'comando_composto':([4,6,9,32,57,76,95,],[7,11,22,22,22,22,22,]),'declaracao_var':([8,28,80,],[12,49,49,]),'lista_id':([8,28,30,47,80,],[13,13,54,77,13,]),'lista_comandos':([9,32,],[15,55,]),'comando':([9,32,57,76,95,],[16,16,81,90,103,]),'atribuicao':([9,32,57,76,95,],[17,17,17,17,17,]),'condicional':([9,32,57,76,95,],[18,18,18,18,18,]),'repeticao':([9,32,57,76,95,],[19,19,19,19,19,]),'leitura':([9,32,57,76,95,],[20,20,20,20,20,]),'escrita':([9,32,57,76,95,],[21,21,21,21,21,]),'expressao':([24,25,33,41,48,93,],[34,46,56,73,79,79,]),'expressao_simples':([24,25,33,41,48,58,93,],[35,35,35,35,35,82,35,]),'termo':([24,25,33,41,48,58,66,67,68,93,],[36,36,36,36,36,36,83,84,85,36,]),'fator':([24,25,33,41,42,43,48,58,66,67,68,70,71,72,93,],[37,37,37,37,74,75,37,37,37,37,37,86,87,88,37,]),'logico':([24,25,33,41,42,43,48,58,66,67,68,70,71,72,93,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'lista_decl_var':([28,80,],[50,94,]),'tipo':([29,],[51,]),'relacao':([35,],[58,]),'expressao_simples_op':([36,83,84,85,],[65,96,97,98,]),'termo_op':([37,86,87,88,],[69,99,100,101,]),'lista_exp':([48,93,],[78,102,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID PV bloco PF','programa',5,'p_programa','parser.py',11),
  ('bloco -> secao_decl_var comando_composto','bloco',2,'p_bloco','parser.py',17),
  ('bloco -> comando_composto','bloco',1,'p_bloco','parser.py',18),
  ('secao_decl_var -> VAR declaracao_var PV lista_decl_var','secao_decl_var',4,'p_secao_decl_var','parser.py',24),
  ('secao_decl_var -> VAR declaracao_var PV','secao_decl_var',3,'p_secao_decl_var','parser.py',25),
  ('lista_decl_var -> declaracao_var PV lista_decl_var','lista_decl_var',3,'p_lista_decl_var','parser.py',30),
  ('lista_decl_var -> declaracao_var PV','lista_decl_var',2,'p_lista_decl_var','parser.py',31),
  ('declaracao_var -> lista_id DP tipo','declaracao_var',3,'p_declaracao_var','parser.py',35),
  ('lista_id -> ID','lista_id',1,'p_lista_id','parser.py',39),
  ('lista_id -> ID VIRG lista_id','lista_id',3,'p_lista_id','parser.py',40),
  ('tipo -> INTEGER','tipo',1,'p_tipo','parser.py',45),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser.py',46),
  ('comando_composto -> BEGIN lista_comandos END','comando_composto',3,'p_comando_composto','parser.py',51),
  ('lista_comandos -> comando','lista_comandos',1,'p_lista_comandos','parser.py',55),
  ('lista_comandos -> comando PV lista_comandos','lista_comandos',3,'p_lista_comandos','parser.py',56),
  ('lista_comandos -> comando PV','lista_comandos',2,'p_lista_comandos','parser.py',57),
  ('comando -> atribuicao','comando',1,'p_comando','parser.py',64),
  ('comando -> condicional','comando',1,'p_comando','parser.py',65),
  ('comando -> repeticao','comando',1,'p_comando','parser.py',66),
  ('comando -> leitura','comando',1,'p_comando','parser.py',67),
  ('comando -> escrita','comando',1,'p_comando','parser.py',68),
  ('comando -> comando_composto','comando',1,'p_comando','parser.py',69),
  ('atribuicao -> ID DPIGUAL expressao','atribuicao',3,'p_atribuicao','parser.py',74),
  ('condicional -> IF expressao THEN comando','condicional',4,'p_condicional','parser.py',79),
  ('condicional -> IF expressao THEN comando ELSE comando','condicional',6,'p_condicional','parser.py',80),
  ('repeticao -> WHILE expressao DO comando','repeticao',4,'p_repeticao','parser.py',85),
  ('leitura -> READ EPAR lista_id DPAR','leitura',4,'p_leitura','parser.py',89),
  ('escrita -> WRITE EPAR lista_exp DPAR','escrita',4,'p_escrita','parser.py',93),
  ('lista_exp -> expressao','lista_exp',1,'p_lista_exp','parser.py',97),
  ('lista_exp -> expressao VIRG lista_exp','lista_exp',3,'p_lista_exp','parser.py',98),
  ('expressao -> expressao_simples','expressao',1,'p_expressao','parser.py',104),
  ('expressao -> expressao_simples relacao expressao_simples','expressao',3,'p_expressao','parser.py',105),
  ('relacao -> IGUAL','relacao',1,'p_relacao','parser.py',110),
  ('relacao -> DIFERENTE','relacao',1,'p_relacao','parser.py',111),
  ('relacao -> MENORQUE','relacao',1,'p_relacao','parser.py',112),
  ('relacao -> MENORIGUAL','relacao',1,'p_relacao','parser.py',113),
  ('relacao -> MAIORQUE','relacao',1,'p_relacao','parser.py',114),
  ('relacao -> MAIORIGUAL','relacao',1,'p_relacao','parser.py',115),
  ('expressao_simples -> termo','expressao_simples',1,'p_expressao_simples','parser.py',120),
  ('expressao_simples -> termo expressao_simples_op','expressao_simples',2,'p_expressao_simples','parser.py',121),
  ('expressao_simples_op -> MAIS termo','expressao_simples_op',2,'p_expressao_simples_op','parser.py',126),
  ('expressao_simples_op -> MENOS termo','expressao_simples_op',2,'p_expressao_simples_op','parser.py',127),
  ('expressao_simples_op -> OR termo','expressao_simples_op',2,'p_expressao_simples_op','parser.py',128),
  ('expressao_simples_op -> MAIS termo expressao_simples_op','expressao_simples_op',3,'p_expressao_simples_op','parser.py',129),
  ('expressao_simples_op -> MENOS termo expressao_simples_op','expressao_simples_op',3,'p_expressao_simples_op','parser.py',130),
  ('expressao_simples_op -> OR termo expressao_simples_op','expressao_simples_op',3,'p_expressao_simples_op','parser.py',131),
  ('termo -> fator','termo',1,'p_termo','parser.py',136),
  ('termo -> fator termo_op','termo',2,'p_termo','parser.py',137),
  ('termo_op -> VEZES fator','termo_op',2,'p_termo_op','parser.py',142),
  ('termo_op -> DIV fator','termo_op',2,'p_termo_op','parser.py',143),
  ('termo_op -> AND fator','termo_op',2,'p_termo_op','parser.py',144),
  ('termo_op -> VEZES fator termo_op','termo_op',3,'p_termo_op','parser.py',145),
  ('termo_op -> DIV fator termo_op','termo_op',3,'p_termo_op','parser.py',146),
  ('termo_op -> AND fator termo_op','termo_op',3,'p_termo_op','parser.py',147),
  ('fator -> ID','fator',1,'p_fator','parser.py',152),
  ('fator -> NUMERO','fator',1,'p_fator','parser.py',153),
  ('fator -> logico','fator',1,'p_fator','parser.py',154),
  ('fator -> EPAR expressao DPAR','fator',3,'p_fator','parser.py',155),
  ('fator -> NOT fator','fator',2,'p_fator','parser.py',156),
  ('fator -> MENOS fator','fator',2,'p_fator','parser.py',157),
  ('logico -> TRUE','logico',1,'p_logico','parser.py',162),
  ('logico -> FALSE','logico',1,'p_logico','parser.py',163),
]
